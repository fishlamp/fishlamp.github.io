<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[FishLamp]]></title>
  <link href="http://fishlamp.github.io/atom.xml" rel="self"/>
  <link href="http://fishlamp.github.io/"/>
  <updated>2013-06-22T14:36:56-07:00</updated>
  <id>http://fishlamp.github.io/</id>
  <author>
    <name><![CDATA[FishLamp]]></name>
    <email><![CDATA[hello@fishlamp.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Moving site to octopress]]></title>
    <link href="http://fishlamp.github.io/blog/2013/06/22/moving-site-to-octopress/"/>
    <updated>2013-06-22T13:26:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2013/06/22/moving-site-to-octopress</id>
    <content type="html"><![CDATA[<p>Wordpress is too slow. It&rsquo;s optimized for ease of composition. Octopress/Jekyll generates static pages and sites and deploying on github pages takes care of the hosting issue and should be much much faster.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New help site]]></title>
    <link href="http://fishlamp.github.io/blog/2013/06/03/new-help-site/"/>
    <updated>2013-06-03T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2013/06/03/new-help-site</id>
    <content type="html"><![CDATA[<p>Just put up a new help site for the framework, you can check it out at <a href="http://help.fishlamp.com">http://help.fishlamp.com.</a></p>
<p>Not a lot of content is there yet - it&#8217;s just the start.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The FishLamp Newsletter]]></title>
    <link href="http://fishlamp.github.io/blog/2013/05/21/the-fishlamp-newsletter/"/>
    <updated>2013-05-21T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2013/05/21/the-fishlamp-newsletter</id>
    <content type="html"><![CDATA[<p>We now have a e-mail newsletter signup option.</p>
<p>If you&#8217;re interested, please sign up <a href="http://eepurl.com/zQBiL">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Smithers, release the hounds.]]></title>
    <link href="http://fishlamp.github.io/blog/2013/05/19/smithers-release-the-hounds/"/>
    <updated>2013-05-19T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2013/05/19/smithers-release-the-hounds</id>
    <content type="html"><![CDATA[<p>FishLamp has been released under the MIT open source license. It is now a public repo - <a href="http://code.fishlamp.com">http://code.fishlamp.com</a>.</p>
<p>Someone get me a cocktail.</p>
<p><img title="github-public.png" src="http://www.fishlamp.com/wp-content/uploads/2013/05/github-public.png" alt="Github public" width="450" height="323" border="0" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tumbleweed and Crickets]]></title>
    <link href="http://fishlamp.github.io/blog/2013/05/02/tumbleweed-and-crickets/"/>
    <updated>2013-05-02T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2013/05/02/tumbleweed-and-crickets</id>
    <content type="html"><![CDATA[Just working on getting a place for the content.

The plan is to start rolling out some stuff to open source.

More later.

&nbsp;
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Custom XCode Project Templates]]></title>
    <link href="http://fishlamp.github.io/blog/2012/09/12/custom-xcode-project-templates/"/>
    <updated>2012-09-12T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2012/09/12/custom-xcode-project-templates</id>
    <content type="html"><![CDATA[Well, this is a bit of voodoo since Apple has NOT documented the custom template format. Fortunately, other people have been reverse engineering this already.

I&#8217;ve created a few new templates myself, but I&#8217;m unable to figure out a couple of things so far:
<ol>
	<li>How to add a dependency on an external project (e.g. a super project that creates a static lib that I want to consume)</li>
	<li>Custom build configuration, e.g. adhoc or test. They seem to be there in the targets, but not the projects, so that&#8217;s not quite helping. Edit: that said, it&#8217;s suddenly now working.</li>
	<li>How to link with a dynamic library</li>
</ol>
Here&#8217;s the best resources I&#8217;ve found on figuring this stuff out:
<ol>
	<li><a href="http://www.learn-cocos2d.com/store/xcode4-template-documentation/">This is the best resource.</a> It&#8217;s from the Cocos2d folks and costs $10.00, but it&#8217;s worth every penny. I&#8217;ve been reading it and rereading it all afternoon.</li>
	<li><a href="https://snipt.net/yonishin/about-xcode-4-project-template/">About XCode 4 Project Template (How To Create Custom Project Template)</a></li>
	<li><a href="https://github.com/davidmorford/BuildKit/tree/master/Support/Xcode/Templates/BuildKit%20iOS%20Application.xctemplate">A good example of a templateInfo.plist file that helped me</a></li>
	<li><a href="http://www.bobmccune.com/2012/03/04/creating-custom-xcode-4-file-templates/">A very nice overview</a></li>
	<li><a href="http://blog.boreal-kiss.net/2011/03/11/a-minimal-project-template-for-xcode-4/">A recipe for creating a minimal project template</a></li>
</ol>
Some interesting stuff that wasn&#8217;t obvious to me:
<ol>
	<li>Project templates can also be used for creating targets. The &#8220;projects&#8221; settings in the templateinfo.plist aren&#8217;t used when making a new project in Xcode.</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode Environment Variables]]></title>
    <link href="http://fishlamp.github.io/blog/2012/09/08/xcode-environment-variables/"/>
    <updated>2012-09-08T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2012/09/08/xcode-environment-variables</id>
    <content type="html"><![CDATA[<p>I&#8217;m continually looking up the list of <a href="http://developer.apple.com/library/ios/#documentation/DeveloperTools/Reference/XcodeBuildSettingRef/1-Build_Setting_Reference/build_setting_ref.html">Xcode Environment variables</a>. </p>
<p>Here&#8217;s a helpful post on <a href="http://stackoverflow.com/questions/6910901/canonical-list-of-xcode-environment-variables">stackoverflow.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why did I make FishLamp?]]></title>
    <link href="http://fishlamp.github.io/blog/2012/09/08/why-did-i-make-fishlamp/"/>
    <updated>2012-09-08T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2012/09/08/why-did-i-make-fishlamp</id>
    <content type="html"><![CDATA[<p>Writing complex software on iOS is damn freaking backbreakingly hard. Anyone who says differently hasn&#8217;t done it before. And I&#8217;m not talking about fart apps. I&#8217;m talking about apps dealing with web services and apps with complex and difficult problems that have to be solved to even make the app useable on a limited device like an iPhone - caching, networking, perceived vs. real performance, all that stuff. Even simple apps can be very time consuming and difficult to get <em>just</em> right.</p>
<p>When I started writing iOS apps, I just wanted to make apps. I was in <em>love </em>with the iPhone. As I wrote and learned and struggled, and as I wrote the apps I was shocked at how hard it could be (and I still am some days.)</p>
<p>Anyway, especially when I have to solve a tough problem, I really, really, REALLY, only want to solve it once. So I tried to do just that and I stuck the solutions to these problems into a folder containing code I could reuse again. </p>
<p>This folder grew and grew and became a gargantuan city stomping monster. But a folder of code is not a framework. But I was treating it like one. I was talking it with people and clients and I realized I had something significant. I began treating it as an entity worthing of attention and care, and I named it FishLamp. I began to craft it into a framework. And that was a couple years ago. </p>
<p>Now I believe that I have something very special and perhaps unique. I want to help other developers ship awesomeness. I want to help other developers solve problems specific to their app, not the same old problems we&#8217;re all solving over and over again in parallel.</p>
<p>I will share FishLamp with you. I&#8217;m still figuring out how to do this though. There&#8217;s a lot of tough problems to solve do this <em>correctly</em>.</p>
<p>And then there&#8217;s the tools. PackMule, Whittle, and Fluffy. </p>
<p>More later.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I work]]></title>
    <link href="http://fishlamp.github.io/blog/2012/09/04/why-did-you-make-fishlamp/"/>
    <updated>2012-09-04T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2012/09/04/why-did-you-make-fishlamp</id>
    <content type="html"><![CDATA[I love writing code, but I hate solving the same problem more than once. I passionately revile it. Maybe more so than I should.

I strive for a few things when I write code. I try to solve the problem once. I try to help the future me re-solve the same problem.

All programmers solve problems. Few think about how they will solve that same problem the next time. And a tiny minority (in my experience) write the code to be reused from the moment the fingers hit the keyboard.

For some, this is a controversial way to do things, but it&#8217;s the way I work and I&#8217;ve been writing code this way for over twenty years. It just is.

Writing code this way <em>does</em> make things a bit harder, at least at <em>first</em>. Writing truly reusable code is damn hard, it takes a long time to get good at it. I view it as a craft or an art form. It takes creativity and, well, obsessiveness. I learn something new every day, and I <em>love </em>that<em>. </em>

I&#8217;ve found that it can be very difficult to explain what it is that I&#8217;m doing while I&#8217;m doing it - visibility into it is sometimes problematic. Even other programmers sometimes don&#8217;t quite understand this approach, or why I&#8217;m doing it. For example, when I was a Microsoft, I once got in trouble for renaming files and classes too often (from a senior development lead). That was a moment of complete and utter confusion for me. Renaming is a byproduct of iterating on an abstraction. Isn&#8217;t this obvious to everyone?

Um, no. It&#8217;s not.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is FishLamp?]]></title>
    <link href="http://fishlamp.github.io/blog/2012/09/04/what-is-fishlamp/"/>
    <updated>2012-09-04T00:00:00-07:00</updated>
    <id>http://fishlamp.github.io/blog/2012/09/04/what-is-fishlamp</id>
    <content type="html"><![CDATA[<p>FishLamp is an SDK for building apps. Right we support iOS and Mac, but we will go where the action is.</p>
<p>There are two parts to FishLamp, the tools and the framework.</p>
<p>The framework is written in Objective-C. Its a very large (approaching 1500 files now) that has been in development for over three years.</p>
<p>And, yes, it has <span style="font-style: italic;">already</span> shipped in multiple products, multiple times.</p>
<p>More on the tools later.</p>
<p>The code can be found at <a href="http://code.fishlamp.com">code.fishlamp.com</a>. Note - we haven&#8217;t released the code yet, but we&#8217;re working on it.</p>
]]></content>
  </entry>
  
</feed>
